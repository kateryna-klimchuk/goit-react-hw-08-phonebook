{"version":3,"file":"static/js/90.3cca4107.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/warning/warning.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["FloatingLabel","React","ref","bsPrefix","className","children","controlId","label","props","useBootstrapPrefix","_jsxs","FormGroup","classNames","_jsx","htmlFor","displayName","propTypes","type","PropTypes","tooltip","as","Feedback","Component","FormCheckInput","id","isValid","isInvalid","useContext","FormContext","FormCheckLabel","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","innerFormContext","useMemo","hasLabel","some","child","hasChildOfType","input","value","_Fragment","Object","assign","Input","Label","FormControl","classes","size","htmlSize","plaintext","readOnly","createWithBsPrefix","Col","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","defaultProps","FormRange","FormSelect","FormText","muted","Switch","_ref","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select","context","warning","module","exports"],"sourceRoot":""}