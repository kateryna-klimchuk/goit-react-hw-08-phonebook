{"version":3,"file":"static/js/688.0f135a9c.chunk.js","mappings":"0RACA,EAAoC,wCAApC,EAAmF,2B,oBC8FnF,EAvFqB,WACnB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACD,SAATb,GACFC,EAAQY,GAEG,UAATb,GACFG,EAASU,GAEE,aAATb,GACFK,EAAYQ,EAEf,EAEKC,EAAkB,mCAAG,WAAMH,GAAN,iEACzBJ,GAAa,GAEbI,EAAMI,iBACNP,GAASQ,EAAAA,EAAAA,IAAS,CAAEhB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCa,IALyB,2CAAH,sDAQlBA,EAAQ,WACZhB,EAAQ,IACRE,EAAS,IACTE,EAAY,IACZE,GAAa,EACd,EAED,OACE,SAACW,EAAA,EAAD,CAAWC,UAAWC,EAAtB,UACE,UAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,WACE,UAACC,EAAA,EAAD,CAAMC,SAAUX,EAAoBK,UAAWC,EAA/C,WACE,UAACI,EAAA,QAAD,CAAYL,UAAU,OAAOO,UAAU,gBAAvC,WACE,SAACF,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACEG,KAAK,OACL3B,KAAK,OACLa,MAAOb,EACP4B,YAAY,kBACZC,SAAUnB,EACVoB,aAAa,QACbC,UAAQ,QAGZ,UAACP,EAAA,QAAD,CAAYL,UAAU,OAAOO,UAAU,iBAAvC,WACE,SAACF,EAAA,QAAD,qBACA,SAACA,EAAA,UAAD,CACEG,KAAK,QACLC,YAAY,cACZ5B,KAAK,QACLa,MAAOX,EACP2B,SAAUnB,EACVoB,aAAa,QACbC,UAAQ,QAGZ,UAACP,EAAA,QAAD,CAAYL,UAAU,OAAOO,UAAU,oBAAvC,WACE,SAACF,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEG,KAAK,WACL3B,KAAK,WACL4B,YAAY,iBACZf,MAAOT,EACPyB,SAAUnB,EACVoB,aAAa,QACbC,UAAQ,QAGZ,gBAAKZ,UAAU,eAAf,UACE,SAACa,EAAA,EAAD,CAAQC,QAAQ,gBAAgBN,KAAK,SAArC,0BAKHrB,IAAa,SAACiB,EAAA,EAAD,QAIrB,C","sources":["webpack://react-homework-template/./src/pages/Registration/RegisterForm.module.css?4a97","pages/Registration/RegisterForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerContainer\":\"RegisterForm_registerContainer__ltaQu\",\"form\":\"RegisterForm_form__FiwMp\"};","import { Form, Button, Container } from 'react-bootstrap';\n\nimport { useState, Suspense } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/authOperations';\nimport style from './RegisterForm.module.css';\nimport Loader from 'components/Loader';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'email') {\n      setEmail(value);\n    }\n    if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmitChange = async event => {\n    setIsLoading(true);\n\n    event.preventDefault();\n    dispatch(register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setIsLoading(false);\n  };\n\n  return (\n    <Container className={style.registerContainer}>\n      <Suspense fallback={<Loader />}>\n        <Form onSubmit={handleSubmitChange} className={style.form}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter your name\"\n              onChange={handleInputChange}\n              autoComplete=\"false\"\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              value={email}\n              onChange={handleInputChange}\n              autoComplete=\"false\"\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={handleInputChange}\n              autoComplete=\"false\"\n              required\n            />\n          </Form.Group>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"outline-light\" type=\"submit\">\n              Sign Up\n            </Button>\n          </div>\n        </Form>\n        {isLoading && <Loader />}\n      </Suspense>\n    </Container>\n  );\n};\nexport default RegisterForm;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","isLoading","setIsLoading","dispatch","useDispatch","handleInputChange","event","currentTarget","value","handleSubmitChange","preventDefault","register","reset","Container","className","style","Suspense","fallback","Loader","Form","onSubmit","controlId","type","placeholder","onChange","autoComplete","required","Button","variant"],"sourceRoot":""}