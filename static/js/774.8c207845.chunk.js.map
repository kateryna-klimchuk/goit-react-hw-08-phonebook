{"version":3,"file":"static/js/774.8c207845.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/EditForm/EditForm.module.css?d1fc","components/EditForm/EditForm.js","redux/contacts/contactsSelector.js","webpack://react-homework-template/./src/pages/Contacts/ContactList/ContactList.module.css?9e72","pages/Contacts/ContactList/ContactList.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/pages/Contacts/Contacts/Contacts.module.css?66d1","pages/Contacts/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"EditForm_modal__vV9A7\",\"modalBody\":\"EditForm_modalBody__1r-El\",\"modalFooter\":\"EditForm_modalFooter__HYucx\",\"modalHeader\":\"EditForm_modalHeader__Lcuof\",\"modalInput\":\"EditForm_modalInput__mUEkW\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport {\n  useEditContactMutation,\n  useGetContactQuery,\n} from '../../redux/contacts/contactsApi.js';\n\nimport Loader from 'components/Loader/Loader.js';\nimport style from './EditForm.module.css';\n\nconst EditForm = ({ id }) => {\n  const [show, setShow] = useState(true);\n  const { data: contacts } = useGetContactQuery();\n  const { name, number } = contacts.find(item => item.id === id);\n\n  const [editName, setEditName] = useState(name);\n  const [editNumber, setEditNumber] = useState(number);\n\n  const [editContact, { isLoading }] = useEditContactMutation();\n  const contactID = id;\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setEditName(value);\n    }\n    if (name === 'number') {\n      setEditNumber(value);\n    }\n  };\n  const handleEditContact = async event => {\n    event.preventDefault();\n    try {\n      await editContact({ id: contactID, name: editName, number: editNumber });\n      setShow(false);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleClose = () => setShow(false);\n\n  return (\n    { name, number } && (\n      <Modal show={show} onHide={handleClose} className={style.modal}>\n        <Modal.Header closeButton className={style.modalHeader}>\n          <Modal.Title>Edit contact</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={style.modalBody}>\n          <Form onSubmit={handleEditContact}>\n            <Form.Group className={style.modalInput}>\n              <Form.Control\n                name=\"name\"\n                value={editName}\n                onChange={handleInputChange}\n              />\n              <Form.Control\n                name=\"number\"\n                value={editNumber}\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer className={style.modalFooter}>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"light\" onClick={handleEditContact}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n        {isLoading && <Loader />}\n      </Modal>\n    )\n  );\n};\n\nEditForm.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default EditForm;\n","export const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__cx-3M\",\"contactItem\":\"ContactList_contactItem__Dc1Zc\",\"btnWrapper\":\"ContactList_btnWrapper__SBBdj\"};","import { Suspense } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { ListGroup, Button } from 'react-bootstrap';\nimport {\n  useGetContactQuery,\n  useDeleteContactMutation,\n} from 'redux/contacts/contactsApi.js';\nimport EditForm from 'components/EditForm/EditForm.js';\nimport { useState } from 'react';\nimport { AiFillEdit, AiFillDelete, AiOutlineUser } from 'react-icons/ai';\nimport { getFilter } from 'redux/contacts/contactsSelector';\nimport style from './ContactList.module.css';\nimport Loader from 'components/Loader';\n\nconst ContactList = () => {\n  const [modalId, setModalId] = useState('');\n  const [show, setShow] = useState(false);\n  const searchFilter = useSelector(getFilter);\n  const { data } = useGetContactQuery();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const getVisibleContacts = () => {\n    if (searchFilter !== '') {\n      return data.filter(({ name }) =>\n        name.toLowerCase().includes(searchFilter)\n      );\n    }\n    return data;\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  const handleDeleteClick = id => {\n    deleteContact(id);\n  };\n\n  const handleEditClick = id => {\n    setModalId(id);\n    setShow(true);\n  };\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <ListGroup className={style.contactList}>\n        {visibleContacts &&\n          visibleContacts.map(({ id, name, number }) => {\n            return (\n              <ListGroup.Item key={id} className={style.contactItem}>\n                <AiOutlineUser />\n                <p>{name}</p>\n                <p>{number}</p>\n                <div className={style.btnWrapper}>\n                  <Button\n                    type=\"button\"\n                    onClick={() => handleEditClick(id)}\n                    variant=\"outline-light\"\n                  >\n                    <AiFillEdit />\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    onClick={() => handleDeleteClick(id)}\n                    variant=\"outline-light\"\n                  >\n                    <AiFillDelete />\n                    {isLoading && <Loader />}\n                  </Button>\n                </div>\n              </ListGroup.Item>\n            );\n          })}\n      </ListGroup>\n      {show && <EditForm id={modalId} />}\n    </Suspense>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"addContactForm\":\"ContactForm_addContactForm__RJQC6\"};","import Notiflix from 'notiflix';\nimport { Form, Button, FloatingLabel } from 'react-bootstrap';\n\nimport { useState } from 'react';\nimport {\n  useGetContactQuery,\n  useAddContactMutation,\n} from '../../redux/contacts/contactsApi.js';\n\nimport style from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const { data } = useGetContactQuery();\n  const [addContact] = useAddContactMutation();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleAddContact = async event => {\n    event.preventDefault();\n    try {\n      data.find(contact => contact.name === name)\n        ? Notiflix.Notify.info(`${name} is already in contacts.`)\n        : (await addContact({ name, number })) &&\n          Notiflix.Notify.success(`${name} added to your phonebook 🚀`);\n    } catch (error) {\n      console.log(error);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <div>\n      <Form onSubmit={handleAddContact} className={style.addContactForm}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <FloatingLabel controlId=\"formBasicName\" label=\"Type Name\">\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleInputChange}\n            />\n          </FloatingLabel>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n          <FloatingLabel controlId=\"formBasicNumber\" label=\"Type Number\">\n            <Form.Control\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleInputChange}\n            />\n          </FloatingLabel>\n        </Form.Group>\n        <div className=\"d-grid gap-2\">\n          <Button variant=\"outline-light\" type=\"submit\">\n            Add Contact\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { Form, FloatingLabel } from 'react-bootstrap';\nimport { filterContact } from 'redux/filter/filterActions';\nimport { getFilter } from 'redux/contacts/contactsSelector';\n\nimport style from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(filterContact(event.currentTarget.value));\n  };\n\n  return (\n    <Form className={style.filter}>\n      <Form.Group controlId=\"ControlInputFilter\">\n        <FloatingLabel\n          controlId=\"ControlInputFilter\"\n          label=\"Find contact by name\"\n        >\n          <Form.Control\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={changeFilter}\n            className={style.filterInput}\n          />\n        </FloatingLabel>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactPage\":\"Contacts_contactPage__YOhq+\",\"contacts\":\"Contacts_contacts__wCUoT\"};","import ContactList from '../ContactList/index';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport { Outlet } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport style from './Contacts.module.css';\n\nconst Contacts = () => {\n  return (\n    <Container className={style.contactPage}>\n      <div className={style.contacts}>\n        <ContactForm />\n        <Filter />\n      </div>\n\n      <div className={style.contacts}>\n        <ContactList />\n      </div>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["id","useState","show","setShow","useGetContactQuery","data","find","item","name","number","editName","setEditName","editNumber","setEditNumber","useEditContactMutation","editContact","isLoading","contactID","handleInputChange","event","currentTarget","value","handleEditContact","preventDefault","console","log","message","handleClose","Modal","onHide","className","style","closeButton","Form","onSubmit","onChange","Button","variant","onClick","Loader","getFilter","state","filter","modalId","setModalId","searchFilter","useSelector","useDeleteContactMutation","deleteContact","visibleContacts","toLowerCase","includes","Suspense","fallback","ListGroup","map","type","handleEditClick","handleDeleteClick","useAddContactMutation","addContact","setName","setNumber","handleAddContact","contact","Notiflix","reset","controlId","FloatingLabel","label","pattern","title","required","dispatch","useDispatch","filterContact","Container"],"sourceRoot":""}